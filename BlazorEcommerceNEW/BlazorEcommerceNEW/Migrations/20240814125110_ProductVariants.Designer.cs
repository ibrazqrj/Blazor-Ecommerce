// <auto-generated />
using BlazorEcommerceNEW.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BlazorEcommerceNEW.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240814125110_ProductVariants")]
    partial class ProductVariants
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BlazorEcommerceNEW.Shared.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "VIP",
                            Url = "vip"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Packs",
                            Url = "packs"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Currencies",
                            Url = "currencies"
                        });
                });

            modelBuilder.Entity("BlazorEcommerceNEW.Shared.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "Geniesse Hobbu mit verschiedenen Vorteile!",
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTntRWnAmtPso89KDj2fqwHBE_aHRbf8mmSqQ&s",
                            Title = "Hobbu - VIP"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            Description = "Hobbu Rare Paket. Die Rares sind frei wählbar.",
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSYy9p1iZa44jfYqXC2NNBU1e4QbUtW5g9xeQ&s",
                            Title = "Hobbu - Rare Pack"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            Description = "Erhalte Diamanten für den Hobbu Client!",
                            ImageUrl = "https://scontent-zrh1-1.xx.fbcdn.net/v/t39.30808-6/274978441_10158590467262963_5370902555679068282_n.png?_nc_cat=106&ccb=1-7&_nc_sid=127cfc&_nc_ohc=vOYzWEKGu0kQ7kNvgFk_LTV&_nc_ht=scontent-zrh1-1.xx&oh=00_AYByiUjSlVZghuOJ4fOKuQ2kWmBxsqzil7uPqguD6lFW6A&oe=66BFCF27",
                            Title = "Hobbu - Diamonds"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 3,
                            Description = "Erhalte Taler für den Hobbu Client!",
                            ImageUrl = "https://media.karousell.com/media/photos/products/2015/11/22/habbo_coins_10cents_1448207029_42efc8a0.jpg",
                            Title = "Hobbu - Taler"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 3,
                            Description = "Erhalte Taler für den Hobbu Client!",
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSAGmXZnYohNKEHtj_59MTJg4N-Xo4uM1KK2A&s",
                            Title = "Hobbu - Duckets"
                        });
                });

            modelBuilder.Entity("BlazorEcommerceNEW.Shared.ProductType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProductTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "1 Monat"
                        },
                        new
                        {
                            Id = 2,
                            Name = "3 Monate"
                        },
                        new
                        {
                            Id = 3,
                            Name = "6 Monate"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Lifetime"
                        },
                        new
                        {
                            Id = 5,
                            Name = "500'000"
                        },
                        new
                        {
                            Id = 6,
                            Name = "1'000'000"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Normal"
                        },
                        new
                        {
                            Id = 8,
                            Name = "XL"
                        });
                });

            modelBuilder.Entity("BlazorEcommerceNEW.Shared.ProductVariant", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("ProductTypeId")
                        .HasColumnType("int");

                    b.Property<decimal>("OriginalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ProductId", "ProductTypeId");

                    b.HasIndex("ProductTypeId");

                    b.ToTable("ProductVariants");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            ProductTypeId = 1,
                            OriginalPrice = 3.00m,
                            Price = 3.00m
                        },
                        new
                        {
                            ProductId = 1,
                            ProductTypeId = 2,
                            OriginalPrice = 5.00m,
                            Price = 8.00m
                        },
                        new
                        {
                            ProductId = 1,
                            ProductTypeId = 3,
                            OriginalPrice = 8.00m,
                            Price = 15.00m
                        },
                        new
                        {
                            ProductId = 1,
                            ProductTypeId = 4,
                            OriginalPrice = 10.00m,
                            Price = 25.00m
                        },
                        new
                        {
                            ProductId = 2,
                            ProductTypeId = 7,
                            OriginalPrice = 5.00m,
                            Price = 5.00m
                        },
                        new
                        {
                            ProductId = 2,
                            ProductTypeId = 8,
                            OriginalPrice = 10.00m,
                            Price = 10.00m
                        },
                        new
                        {
                            ProductId = 3,
                            ProductTypeId = 5,
                            OriginalPrice = 5.00m,
                            Price = 5.00m
                        },
                        new
                        {
                            ProductId = 3,
                            ProductTypeId = 6,
                            OriginalPrice = 10.00m,
                            Price = 10.00m
                        },
                        new
                        {
                            ProductId = 4,
                            ProductTypeId = 5,
                            OriginalPrice = 5.00m,
                            Price = 5.00m
                        },
                        new
                        {
                            ProductId = 4,
                            ProductTypeId = 6,
                            OriginalPrice = 10.00m,
                            Price = 10.00m
                        },
                        new
                        {
                            ProductId = 5,
                            ProductTypeId = 5,
                            OriginalPrice = 2.50m,
                            Price = 2.50m
                        },
                        new
                        {
                            ProductId = 5,
                            ProductTypeId = 6,
                            OriginalPrice = 5.00m,
                            Price = 10.00m
                        });
                });

            modelBuilder.Entity("BlazorEcommerceNEW.Shared.Product", b =>
                {
                    b.HasOne("BlazorEcommerceNEW.Shared.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("BlazorEcommerceNEW.Shared.ProductVariant", b =>
                {
                    b.HasOne("BlazorEcommerceNEW.Shared.Product", "Product")
                        .WithMany("Variants")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorEcommerceNEW.Shared.ProductType", "ProductType")
                        .WithMany()
                        .HasForeignKey("ProductTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("ProductType");
                });

            modelBuilder.Entity("BlazorEcommerceNEW.Shared.Product", b =>
                {
                    b.Navigation("Variants");
                });
#pragma warning restore 612, 618
        }
    }
}
