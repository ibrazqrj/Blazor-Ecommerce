// <auto-generated />
using BlazorEcommerceNEW.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BlazorEcommerceNEW.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240819133058_FeaturedProducts")]
    partial class FeaturedProducts
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BlazorEcommerceNEW.Shared.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "VIP",
                            Url = "vip"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Pakete",
                            Url = "packs"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Währung",
                            Url = "currencies"
                        });
                });

            modelBuilder.Entity("BlazorEcommerceNEW.Shared.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Featured")
                        .HasColumnType("bit");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "Geniesse Hobbu mit verschiedenen Vorteile!",
                            Featured = true,
                            ImageUrl = "https://i.imgur.com/ZhRJNod.png",
                            Title = "Hobbu - VIP"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            Description = "Hobbu Rare Paket. Die Rares sind frei wählbar.",
                            Featured = false,
                            ImageUrl = "https://i.imgur.com/UQjhDCy.png",
                            Title = "Hobbu - Rare Paket"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            Description = "Erhalte Diamanten für den Hobbu Client!",
                            Featured = true,
                            ImageUrl = "https://i.imgur.com/7mq1YzD.png",
                            Title = "Hobbu - Diamanten"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 3,
                            Description = "Erhalte Taler für den Hobbu Client!",
                            Featured = false,
                            ImageUrl = "https://i.imgur.com/qgAsu9u.png",
                            Title = "Hobbu - Taler"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 3,
                            Description = "Erhalte Taler für den Hobbu Client!",
                            Featured = false,
                            ImageUrl = "https://cdn.discordapp.com/attachments/1266160134665670797/1275056899997564952/DucketsBanner.png?ex=66c480c6&is=66c32f46&hm=c10369c0a81232057f634f538999324158777fa771527d1ef7b4dbfbf253b294&",
                            Title = "Hobbu - Duckets"
                        });
                });

            modelBuilder.Entity("BlazorEcommerceNEW.Shared.ProductType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProductTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "1 Monat"
                        },
                        new
                        {
                            Id = 2,
                            Name = "3 Monate"
                        },
                        new
                        {
                            Id = 3,
                            Name = "6 Monate"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Lifetime"
                        },
                        new
                        {
                            Id = 5,
                            Name = "500'000"
                        },
                        new
                        {
                            Id = 6,
                            Name = "1'000'000"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Normal"
                        },
                        new
                        {
                            Id = 8,
                            Name = "XL"
                        });
                });

            modelBuilder.Entity("BlazorEcommerceNEW.Shared.ProductVariant", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("ProductTypeId")
                        .HasColumnType("int");

                    b.Property<decimal>("OriginalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ProductId", "ProductTypeId");

                    b.HasIndex("ProductTypeId");

                    b.ToTable("ProductVariants");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            ProductTypeId = 1,
                            OriginalPrice = 3.00m,
                            Price = 3.00m
                        },
                        new
                        {
                            ProductId = 1,
                            ProductTypeId = 2,
                            OriginalPrice = 5.00m,
                            Price = 8.00m
                        },
                        new
                        {
                            ProductId = 1,
                            ProductTypeId = 3,
                            OriginalPrice = 8.00m,
                            Price = 15.00m
                        },
                        new
                        {
                            ProductId = 1,
                            ProductTypeId = 4,
                            OriginalPrice = 10.00m,
                            Price = 25.00m
                        },
                        new
                        {
                            ProductId = 2,
                            ProductTypeId = 7,
                            OriginalPrice = 5.00m,
                            Price = 5.00m
                        },
                        new
                        {
                            ProductId = 2,
                            ProductTypeId = 8,
                            OriginalPrice = 10.00m,
                            Price = 10.00m
                        },
                        new
                        {
                            ProductId = 3,
                            ProductTypeId = 5,
                            OriginalPrice = 5.00m,
                            Price = 5.00m
                        },
                        new
                        {
                            ProductId = 3,
                            ProductTypeId = 6,
                            OriginalPrice = 10.00m,
                            Price = 10.00m
                        },
                        new
                        {
                            ProductId = 4,
                            ProductTypeId = 5,
                            OriginalPrice = 5.00m,
                            Price = 5.00m
                        },
                        new
                        {
                            ProductId = 4,
                            ProductTypeId = 6,
                            OriginalPrice = 10.00m,
                            Price = 10.00m
                        },
                        new
                        {
                            ProductId = 5,
                            ProductTypeId = 5,
                            OriginalPrice = 2.50m,
                            Price = 2.50m
                        },
                        new
                        {
                            ProductId = 5,
                            ProductTypeId = 6,
                            OriginalPrice = 5.00m,
                            Price = 10.00m
                        });
                });

            modelBuilder.Entity("BlazorEcommerceNEW.Shared.Product", b =>
                {
                    b.HasOne("BlazorEcommerceNEW.Shared.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("BlazorEcommerceNEW.Shared.ProductVariant", b =>
                {
                    b.HasOne("BlazorEcommerceNEW.Shared.Product", "Product")
                        .WithMany("Variants")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorEcommerceNEW.Shared.ProductType", "ProductType")
                        .WithMany()
                        .HasForeignKey("ProductTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("ProductType");
                });

            modelBuilder.Entity("BlazorEcommerceNEW.Shared.Product", b =>
                {
                    b.Navigation("Variants");
                });
#pragma warning restore 612, 618
        }
    }
}
